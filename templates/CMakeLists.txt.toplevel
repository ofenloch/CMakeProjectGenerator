# CMakeLists.txt: top level CMakeLists.txt for project ${PROJECT_NAME}

# set minimum CMake version
cmake_minimum_required(VERSION 3.15)

# This is your project statement. You should always list languages;
# Listing the version is nice here since it sets lots of useful variables
project(${PROJECT_NAME} VERSION 0.0.1 LANGUAGES CXX)

# set the project's root folder
set(PROJECT_ROOT ${PROJECT_ROOT})
# set the project's name
set(PROJECT_NAME ${PROJECT_NAME})

# set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

message("CMAKE_SOURCE_DIR  : \"${CMAKE_SOURCE_DIR}\"")
message("PROJECT_NAME      : \"${PROJECT_NAME}\"")
message("PROJECT_ROOT      : \"${PROJECT_ROOT}\"")



# set include directories
include_directories(
  "${CMAKE_SOURCE_DIR}/bin/include"
  "${CMAKE_SOURCE_DIR}/lib/include"
  "${CMAKE_SOURCE_DIR}/test/include"
)

# include the sub-projects in bin, lib and test
add_subdirectory(lib)
add_subdirectory(bin)
add_subdirectory(test)


#
# Testing
#
enable_testing()

# define a function to simplify adding tests (using PASS_REGULAR_EXPRESSION to check the program's output)
function(do_test target arg result)
  add_test(NAME Comp${arg} COMMAND ${target} ${arg})
  set_tests_properties(Comp${arg}
    PROPERTIES PASS_REGULAR_EXPRESSION ${result}
)
endfunction(do_test)

# minimal test: does it run?
add_test(NAME Runs COMMAND ${PROJECT_NAME}bin)


